{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stajyeryazilim\\\\Desktop\\\\market-main\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, Circle } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  markers,\n  onMarkerClick,\n  onRadiusChange\n}) => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [radius, setRadius] = useState(5000); // 5km varsayılan\n\n  const mapStyles = {\n    height: \"70vh\",\n    width: \"100%\"\n  };\n  const defaultCenter = {\n    lat: 39.9334,\n    // Ankara'nın koordinatları\n    lng: 32.8597\n  };\n  useEffect(() => {\n    // Kullanıcının konumunu al\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const userPos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserLocation(userPos);\n        onRadiusChange(userPos.lat, userPos.lng, radius);\n      }, error => {\n        console.error('Konum alınamadı:', error);\n      });\n    }\n  }, []);\n  const handleRadiusChange = e => {\n    const newRadius = parseInt(e.target.value);\n    setRadius(newRadius);\n    if (userLocation) {\n      onRadiusChange(userLocation.lat, userLocation.lng, newRadius);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radius-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Arama yar\\u0131\\xE7ap\\u0131: \", radius / 1000, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1000\",\n        max: \"10000\",\n        step: \"1000\",\n        value: radius,\n        onChange: handleRadiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDep0OeyVVHnIBKRr_jJSJhFGs4RMdpUcQzaSyDep0OeyVVHnIBKRr_jJSJhFGs4RMdpUcQ\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapStyles,\n        zoom: 13,\n        center: userLocation || defaultCenter,\n        children: [userLocation && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: userLocation,\n            icon: {\n              url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Circle, {\n            center: userLocation,\n            radius: radius,\n            options: {\n              fillColor: '#3B82F6',\n              fillOpacity: 0.1,\n              strokeColor: '#3B82F6',\n              strokeOpacity: 0.8,\n              strokeWeight: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.position,\n          onClick: () => onMarkerClick(marker),\n          icon: {\n            url: marker.name === 'Migros' ? 'http://maps.google.com/mapfiles/ms/icons/red-dot.png' : 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"QF3yoTDwYBEC2la3Y3o7IfEwoCA=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","LoadScript","Marker","Circle","jsxDEV","_jsxDEV","Fragment","_Fragment","Map","markers","onMarkerClick","onRadiusChange","_s","userLocation","setUserLocation","radius","setRadius","mapStyles","height","width","defaultCenter","lat","lng","navigator","geolocation","getCurrentPosition","position","userPos","coords","latitude","longitude","error","console","handleRadiusChange","e","newRadius","parseInt","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","step","onChange","googleMapsApiKey","mapContainerStyle","zoom","center","icon","url","options","fillColor","fillOpacity","strokeColor","strokeOpacity","strokeWeight","map","marker","index","onClick","name","_c","$RefreshReg$"],"sources":["C:/Users/stajyeryazilim/Desktop/market-main/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleMap, LoadScript, Marker, Circle } from '@react-google-maps/api';\n\nconst Map = ({ markers, onMarkerClick, onRadiusChange }) => {\n  const [userLocation, setUserLocation] = useState(null);\n  const [radius, setRadius] = useState(5000); // 5km varsayılan\n  \n  const mapStyles = {\n    height: \"70vh\",\n    width: \"100%\"\n  };\n\n  const defaultCenter = {\n    lat: 39.9334, // Ankara'nın koordinatları\n    lng: 32.8597\n  };\n\n  useEffect(() => {\n    // Kullanıcının konumunu al\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const userPos = {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n          setUserLocation(userPos);\n          onRadiusChange(userPos.lat, userPos.lng, radius);\n        },\n        (error) => {\n          console.error('Konum alınamadı:', error);\n        }\n      );\n    }\n  }, []);\n\n  const handleRadiusChange = (e) => {\n    const newRadius = parseInt(e.target.value);\n    setRadius(newRadius);\n    if (userLocation) {\n      onRadiusChange(userLocation.lat, userLocation.lng, newRadius);\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"radius-control\">\n        <label>Arama yarıçapı: {radius/1000} km</label>\n        <input\n          type=\"range\"\n          min=\"1000\"\n          max=\"10000\"\n          step=\"1000\"\n          value={radius}\n          onChange={handleRadiusChange}\n        />\n      </div>\n\n      <LoadScript googleMapsApiKey=\"AIzaSyDep0OeyVVHnIBKRr_jJSJhFGs4RMdpUcQzaSyDep0OeyVVHnIBKRr_jJSJhFGs4RMdpUcQ\">\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={13}\n          center={userLocation || defaultCenter}\n        >\n          {userLocation && (\n            <>\n              <Marker\n                position={userLocation}\n                icon={{\n                  url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'\n                }}\n              />\n              <Circle\n                center={userLocation}\n                radius={radius}\n                options={{\n                  fillColor: '#3B82F6',\n                  fillOpacity: 0.1,\n                  strokeColor: '#3B82F6',\n                  strokeOpacity: 0.8,\n                  strokeWeight: 2,\n                }}\n              />\n            </>\n          )}\n\n          {markers.map((marker, index) => (\n            <Marker\n              key={index}\n              position={marker.position}\n              onClick={() => onMarkerClick(marker)}\n              icon={{\n                url: marker.name === 'Migros' \n                  ? 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'\n                  : 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png'\n              }}\n            />\n          ))}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}